spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP-SERVERS:"localhost:9092"}
spring.kafka.consumer.group-id=${KAFKA_GROUP_ID:my-group}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.datasource.url: ${SPRING_DATASOURCE_URL}
spring.datasource.username: ${SPRING_DATASOURCE_USERNAME}
spring.datasource.password: ${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto: update
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

spring.data.redis.host=${SPRING_REDIS_HOST:"redis"}
spring.data.redis.port=6379

spring.security.oauth2.client.registration.robb.client-secret=WDiSZ1xaYn2S6Bx7vYvY2NrbSf5xKYmn
spring.security.oauth2.client.registration.robb.client-id=robb
spring.security.oauth2.client.registration.robb.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.robb.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.robb.scope=openid,profile,email

spring.security.oauth2.client.provider.robb.authorization-uri=http://keycloak:8080/auth/realms/master/protocol/openid-connect/auth
spring.security.oauth2.client.provider.robb.token-uri=http://keycloak:8080/auth/realms/master/protocol/openid-connect/token
spring.security.oauth2.client.provider.robb.user-info-uri=http://keycloak:8080/auth/realms/master/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.robb.jwk-set-uri=http://keycloak:8080/auth/realms/master/protocol/openid-connect/certs
spring.security.oauth2.client.provider.robb.user-name-attribute=preferred_username