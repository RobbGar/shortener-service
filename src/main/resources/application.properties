spring.datasource.url: ${SPRING_DATASOURCE_URL}
spring.datasource.username: ${SPRING_DATASOURCE_USERNAME}
spring.datasource.password: ${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto: update
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

spring.security.oauth2.client.registration.robb.client-secret=${KEYCLOAK_CLIENT_SECRET}
spring.security.oauth2.client.registration.robb.client-id=robb
spring.security.oauth2.client.registration.robb.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.robb.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.robb.scope=openid,profile,email

spring.security.oauth2.client.provider.robb.authorization-uri=http://${KEYCLOAK_URL:keycloak:8080}/auth/realms/master/protocol/openid-connect/auth
spring.security.oauth2.client.provider.robb.token-uri=http://${KEYCLOAK_URL:keycloak:8080}/auth/realms/master/protocol/openid-connect/token
spring.security.oauth2.client.provider.robb.user-info-uri=http://${KEYCLOAK_URL:keycloak:8080}/auth/realms/master/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.robb.jwk-set-uri=http://${KEYCLOAK_URL:keycloak:8080}/auth/realms/master/protocol/openid-connect/certs
spring.security.oauth2.client.provider.robb.user-name-attribute=preferred_username

logging.level.org.springframework=${LOG_LEVEL:INFO}